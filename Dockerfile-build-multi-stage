############ 1st ############
# 1st stage prepare build
############ 1st ############
FROM rwynn/monstache-builder-base:0.0.1 AS builder

# The 1st stage is to cache go packages

# https://github.com/kelseyhightower/confd/issues/609
# ENV CGO_ENABLED=0

# ENV GOPATH /go

# RUN apk add --no-cache gcc go git musl-dev make zip

WORKDIR /go/src/app

COPY . .

RUN go get -d -v ./...

############ 2nd ############
# The 2nd stage is to run make all using already cached binaries
############ 2nd ############

# # FROM golang:alpine
# FROM rwynn/monstache-builder-base:0.0.1 AS monstache-builder-make

# COPY --from=monstache-builder-base /go /go
# COPY --from=monstache-builder-base /usr/lib/go /usr/lib/go

# WORKDIR /go/src/app

# COPY . .

# # # # RUN go install -v ./...
# # RUN go install

# # # RUN go build

RUN make

############ 3rd ############
# The 3rd stage is to copy make all using already cached binaries
############ 3rd ############

# FROM golang:alpine

# Use the following with CGO_ENABLED=0 builds
FROM alpine:3.7 AS final

# # Use the following with CGO_ENABLED=1 builds (e.g. you need to use the go plugin feature)
# FROM debian:latest


RUN apk --no-cache add ca-certificates

ENTRYPOINT ["/bin/monstache"]

# COPY --from=monstache-builder-make /go/src/app/build /app/build

# ADD monstache /bin/monstache
COPY --from=builder /go/src/app/build/linux-amd64/monstache /bin/monstache
